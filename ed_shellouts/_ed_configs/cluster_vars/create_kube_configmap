#!/usr/bin/env python

import os
import yaml

api_version = os.environ.get("KUBE_API_VERSION")
sched_name = os.environ.get("SCHED_NAME")
config_map_name = os.environ.get("KUBE_CONFIG_MAP_NAME")
namespace = os.environ.get("KUBE_NAMESPACE")
if not config_map_name: config_map_name = "{}-{}".format(sched_name,"configmap")
if not namespace: namespace = "default"
if not api_version: api_version = "v1"

configmap_file = os.environ.get("CONFIG_MAP_FILE")
if not configmap_file: env_file = "/var/tmp/docker/build/{}-configmap.yaml".format(sched_name)

base_dir = os.environ.get("BASE_DIR",os.getcwd())
cluster_vars_dir = "cluster_vars"

cluster_vars_fqn_dir = "{}/{}".format(base_dir,cluster_vars_dir)

if not os.path.isdir(cluster_vars_fqn_dir): 
    print "cluster_vars directory does not exists"
    exit(0)

env_files = sorted([f for f in os.listdir(cluster_vars_fqn_dir) if f.endswith('.env')])

if not env_files:
    print "cluster_vars directory is empty"
    exit(0)

if ".env" in env_files: 
    env_files.remove(".env")
    env_files.append(".env")

contents = {}
contents["apiVersion"] = api_version
contents["kind"] = "ConfigMap"
contents["metadata"] = {}
contents["metadata"]["name"] = config_map_name
contents["metadata"]["namespace"] = namespace
contents["data"] = {}

for _file in env_files:
    lines = open("{}/{}".format(cluster_vars_fqn_dir,_file),"r")
    for line in lines:
        line = line.strip()
        if not line: continue
        if line.startswith("#"): continue
        _key,_value = line.split("=")
        contents["data"][_key.strip()] = _value.split()

with open(configmap_file, 'w') as yaml_file:
    print "Writing yaml file %s." % env_file
    yaml_file.write(yaml.safe_dump(contents,default_flow_style=False))
